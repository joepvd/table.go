#!/usr/bin/env -S bats --pretty
# vim: set ft=sh:

repo="$(git rev-parse --show-toplevel)"
binary="$repo/table"

@test "binary exists" {
  [[ -x "$binary" ]]
}

in="$(cat <<-EOF
	1234 567 789000
	3 4 5
	67890 345 6788
EOF
)"

md_expected="$(cat <<-EOF
	| 1234  | 567 | 789000 |
	| ----- | --- | ------ |
	| 3     | 4   | 5      |
	| 67890 | 345 | 6788   |
EOF
)"

psql_expected="$(cat <<-EOF
	┌───────┬─────┬────────┐
	│ 1234  │ 567 │ 789000 │
	├───────┼─────┼────────┤
	│ 3     │ 4   │ 5      │
	│ 67890 │ 345 │ 6788   │
	└───────┴─────┴────────┘
EOF
)"

jira_expected="$(cat <<-EOF
	|| 1234  || 567 || 789000 ||
	|  3     |  4   |  5       |
	|  67890 |  345 |  6788    |
EOF
)"

rst_expected="$(cat <<-EOF
	    +-------+-----+--------+
	    | 1234  | 567 | 789000 |
	    +=======+=====+========+
	    | 3     | 4   | 5      |
	    +-------+-----+--------+
	    | 67890 | 345 | 6788   |
	    +-------+-----+--------+
EOF
)"

@test "running the binary" {
  run $binary <<<"$in"

  [[ "$status" == 0 ]]
  [[ "$output" == "$md_expected" ]]
}

@test "run from file" {
  echo "$in" >tmpfile
  run $binary tmpfile

  [[ "$status" == 0 ]]
  [[ "$output" == "$md_expected" ]]
  rm -f tmpfile
}

@test "output md" {
  run "$binary" --style md <<<"$in"

  [[ "$status" == 0 ]]
  [[ "$output" == "$md_expected" ]]
}

@test "output psql" {
  run $binary --style psql <<<"$in"

  [[ "$status" == 0 ]]
  [[ "$output" == "$psql_expected" ]]
}

@test "output jira" {
  run $binary --style jira <<<"$in"

  [[ "$status" == 0 ]]
  [[ "$output" == "$jira_expected" ]]
}

@test "output rst" {
  run $binary --style rst <<<"$in"

  skip "This is a WIP"
  [[ "$status" == 0 ]]
  [[ "$output" == "$rst_expected" ]]
}
